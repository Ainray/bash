#!/bin/bash
# check current tty when you in pty
# in some case, you maybe do not want to know current connected terminal device
# instead you want to know current process is derived from which tty. This gives
# what you want.
ppid=
ptty=
# inital current process
pid=$$
# pid=$BASHPID
counter=0
while :; do
    #echo $pid
    ppid=$(ps -p ${pid} -o ppid h 2>/dev/null) || exit 1
    # find tty of parent process
    ppty=$(ps -p ${ppid} -o tty h 2>/dev/null) || exit 1
    echo ${ppty} | grep "tty" 2>&1 >/dev/null && echo ${ppty} && exit 0
    # in some case(e.g., ssh login from Windows Xshell, the parent process
    # invoking current bash (maybe) shell is sshd, and whose TTY will be ?.
    echo "${ppty}" | grep "\?" 2>&1 >/dev/null && echo "${ppty}" && exit 0
    # if not find, continue upward
    pid=${ppid} 
    let ++counter
    #echo counter=$counter
    [ ${counter} -ge 8 ] && exit 1
done
